version: '3.8'

services:
  frontend:
    build:
      context: ./HIRecipi
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./HIRecipi:/app
      - /app/node_modules
      - /app/.next
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/hirecipi
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:8000
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - INTERNAL_API_KEY=${INTERNAL_API_KEY}
      - WATCHPACK_POLLING=true
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - hirecipi-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/app/__pycache__
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/hirecipi
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - INTERNAL_API_KEY=${INTERNAL_API_KEY}
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    depends_on:
      db:
        condition: service_healthy
    networks:
      - hirecipi-network

  db:
    image: ankane/pgvector:v0.5.1
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hirecipi
      # PostgreSQL 성능 최적화 설정
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=128MB
      - POSTGRES_WORK_MEM=4MB
      - POSTGRES_MAINTENANCE_WORK_MEM=64MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=512MB
      - POSTGRES_RANDOM_PAGE_COST=1.1
      - POSTGRES_SYNCHRONOUS_COMMIT=off
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: >
      postgres
      -c max_connections=100
      -c shared_buffers=128MB
      -c work_mem=4MB
      -c maintenance_work_mem=64MB
      -c effective_cache_size=512MB
      -c random_page_cost=1.1
      -c synchronous_commit=off
      -c log_min_duration_statement=200
      -c idle_in_transaction_session_timeout=30000
      -c statement_timeout=30000
      -c tcp_keepalives_idle=30
      -c tcp_keepalives_interval=10
      -c tcp_keepalives_count=3
      -c max_prepared_transactions=0
      -c track_activities=on
      -c track_counts=on
      -c autovacuum=on
      -c max_worker_processes=4
      -c max_parallel_workers_per_gather=2
      -c max_parallel_workers=4
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    networks:
      - hirecipi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  hirecipi-network:
    driver: bridge 